The Visitor pattern lets you emulate the functional style in an object-oriented language.
Devise a complementary pattern for a functional language.
It should let you bundle all of the operations on one type together and let you define new types easily.
(SML or Haskell would be ideal for this exercise, but Scheme or another Lisp works as well.)


Idk. In Erlang, you can still define custom types. (tuples). Each tuple should also hold pointers to all
functions that would operate on it. IDK.
